<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">
<h:head>
</h:head>
<h:body>

    <p:notificationBar position="top" effect="slide" styleClass="top" widgetVar="bar">
        <h:panelGrid columns="3" cellpadding="10">
            <p:button outcome="Mail" value="Mail" icon="ui-icon-star" href="mailto:NKBart@me.com"> </p:button>
            <p:button outcome="LinkedIn" value="LinkedIn" icon="ui-icon-star"
                      href="https://ua.linkedin.com/pub/sasha-kalko/90/b81/5a/"> </p:button>
            <p:commandButton value="Hide" onclick="PF('bar').hide()" type="button" icon="ui-icon-arrow-1-n"/>
        </h:panelGrid>
    </p:notificationBar>


    <p:toolbar id="tb">
        <f:facet name="left">
            <p:button value="Exceptions" href="/pages/core/exceptions.xhtml" icon="ui-icon-notice"/>
            <p:button value="Java I/O" href="/pages/core/io.xhtml" icon="ui-icon-transferthick-e-w"/>
            <p:button value="Multithreading" href="/pages/core/multithreading.xhtml" icon="ui-icon-shuffle"/>
            <p:button value="Collections API" href="/pages/core/collections.xhtml" icon="ui-icon-script"/>
            <p:commandButton value="Contact me" onclick="PF('bar').show()" type="button" icon="ui-icon-arrow-1-s"/>
        </f:facet>
        <f:facet name="right">
            <p:button value="Main page" href="/pages/index.xhtml" icon="ui-icon-star"/>
        </f:facet>
    </p:toolbar>

    <p:sticky target="tb"/>

    <p:fieldset style="margin-bottom:20px">
        <h:form>
            <h:outputText value="The Java Collections API's provide Java developers with a set of
             classes and interfaces that makes it easier to handle collections of objects.
             In a sense Collection's works a bit like arrays, except their size can change dynamically,
             and they have more advanced behaviour than arrays. Rather than having to write your own
             collection classes, Java provides these ready-to-use collection classes for you."/>
            <br/>
            <h:graphicImage value="#{resource['Collections2.jpg']}"/>
            <br/>
            <p:commandButton value="ArrayList" icon="ui-icon-extlink" actionListener="#{collectionsview.openAL()}"
                             style="margin-bottom:10px;margin-left:10px"/>
            <p:commandButton value="LinkedList" icon="ui-icon-extlink" actionListener="#{collectionsview.openLL()}"
                             style="margin-bottom:10px;margin-left:10px"/>
            <p:commandButton value="HashSet" icon="ui-icon-extlink" actionListener="#{collectionsview.openHS()}"
                             style="margin-bottom:10px;margin-left:10px"/>
            <p:commandButton value="TreeSet" icon="ui-icon-extlink" actionListener="#{collectionsview.openTS()}"
                             style="margin-bottom:10px;margin-left:10px"/>
            <p:commandButton value="HashMap" icon="ui-icon-extlink" actionListener="#{collectionsview.openHM()}"
                             style="margin-bottom:10px;margin-left:10px"/>
            <p:commandButton value="TreeMap" icon="ui-icon-extlink" actionListener="#{collectionsview.openTM()}"
                             style="margin-bottom:10px;margin-left:10px"/>
        </h:form>
    </p:fieldset>
</h:body>
</html>

